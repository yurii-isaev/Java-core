package behavioral.strategy.cl;

/**
 * Шаблон проектирования - стратегия инкапсулирует определенное поведение с возможностью его подмены.
 * <p>
 * Когда использовать стратегию
 * Когда есть несколько схожих классов, которые отличаются поведением.
 * Можно задать один основной класс, а разные варианты поведения вынести в отдельные классы
 * и при необходимости их применять;
 * <p>
 * Когда необходимо обеспечить выбор из нескольких вариантов решений,
 * которые можно легко менять в зависимости от условий;
 * <p>
 * Когда необходимо менять поведение классов и объектов на стадии выполнения программы;
 * <p>
 * Когда класс, применяющий определенную функциональность, ничего не должен знать о ее реализации
 */

public class Main {
   public static void main(String[] args) {
      Switcher client = new Switcher();
      client.setStrategy(new Lamp()); // установление реализации
      client.executeStrategy();       // выполнение реализации
   }
}
